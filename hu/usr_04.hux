*usr_04.txt*	Vim verzió 8.2.  Frissítve: 2021 Feb 22

		  Bram Moolenaar: Vim felhasználói Kézikönyv

			     Kisebb változtatások


Az alábbi fejezet bemutatja, hogy hogyan korrigálj és hogyan mozgasd a
szöveget. Háromféleképpen tanítja meg a művelet elvégzését:
operátor-tartomány, Visual mód, és szöveges objektumokkal.

|04.1|	Operátorok és tartományok
|04.2|	Szöveg cseréje
|04.3|	Szerkesztés ismétlése
|04.4|	Visual mód
|04.5|	Szöveg mozgatása
|04.6|	Szöveg másolása 
|04.7|	Vágólap használata
|04.8|	Szöveg-objektumok
|04.9|	Replace mód
|04.10|	Összefoglalás

     Következő fejezet: |usr_05.txt|  A beállításaid
 Előző fejezet |usr_03.txt|  Navigáció
Tartalomjegyzék: |usr_toc.txt|

==============================================================================
*04.1*	Operátorok és tartományok

A második fejezetben megismerkedhettél az "x" paranccsal (karakter törlése),
valamind a "4x" (négy karakter törlése parancsokkal).
   A "dw" paracs kitörli az adott szót. Talán felismerted már, hogy a "w"
parancs tartományt jelöl (a következő szóig). A "d" parancsot követheti
bármely olyan parancs, amely tartományt jelöl (legyen az sor vége, sor
kezdete, fájl eleje, fájl vége), minden esetben addig fog törölni, ahol a
kurzor landol.
   A "4w" parancs például előre lép 4 szót. A "d4w" parancs töröl négy szót.

	To err is human. To really foul up you need a computer. ~
			 ------------------>
				 d4w

	To err is human. you need a computer. ~

A Vim csak addig töröl, ameddig a kurzor mozdul. A Vim tudja, ha egy törlő
parancshoz "e" tartományt használsz, akkor valószínűleg nem szeretnéd törölni
a szó első részét, illetve, nem szeretnéd megtartani a szó utolsó karakterét
sem:

	To err is human. you need a computer. ~
			-------->
			   d2e

	To err is human. a computer. ~

A kurzor alatt lévő karakter sorsát az dönti el, hogy milyen tartománnyal
mozdítod el a kurzort. A dokumentáció "exkluzív" parancsnak tekinti azon
parancsokat, ahol a tartomány végén (vagy kezdetén) lévő karakterek nem érintettek a művelet során  (nyilvánvalóan "inluzívnak", ha igen).

A "$" parancs a sor végére helyezi a kurzort. A "d$" parancs a kurzor kezdeti
pozíciójától a sor végéig töröl. Ez egy inkluzív művelet, azaz a sor végén
lévő karakter is törlődik a parancs végrehajtásakor:

	To err is human. a computer. ~
		       ------------>
			    d$

	To err is human ~

A minta: operátor-tartomány. Először egy operátor parancsot kell begépelned,
például a "d" törlő operátort, ezután következhet az operátor hatásköre, azaz
a tartomány (például "4l" vagy "w"). Röviden, azokon a szövegrészleteken
végezhetsz műveleteket, melyeken a kurzor képzeletben áthalad.

==============================================================================
*04.2*	Szöveg cseréje

Ehhez a művelethez a "c" csere parancs tartozik. Ugyanúgy viselkedik, mint a
"d" parancs azzal a különbséggel, hogy a Insert módra állítja a szerkesztőt.
Például "cw" egy szót cserél. Illetve még pontosabban, kitörli a szót is a
szerkesztőt Insert módra állítja. 

	To err is human ~
	   ------->
	     c2wbe<Esc>

	To be human ~

A "c2wbe<Esc>" parancs részekre bontva:

	c	a csere operátor
	2w	két szót előre (ezek ki lesznek törölve, majd Insert módra
		váltás)
	be	"be" bevitele
	<Esc>	vissza Normál módba

Felfedezhettünk valami különlegeset: A szóköz a "human" szó elől nem lett
törölve. A c operátor a "d" operátorhoz hasonlóan műküdik, kivéve a "cw"
parancsot. Valójában "cw" parancs a "ce" paranccsal egyenértékű, mely a szó
végéig töröl, azért a szó utáni szóköz nem képzi a tartomány részét. A Vi
körszakból maradt vissza a mechanizmus, melyet annyi ember használt már, hogy
a Vim is így lett implementálva.


NAGYOBB TERJEDELMŰ CSERÉK

A "dd" parancs egy egész sort töröl, a "cc" egy egész sort cserél és megtartja
a sor behúzását.

Mint a "d$", mely a sor végéig töröl, "c$" a sor végéig cserél. Olyan, mintha
"d$" törölnénk a sor végéig, majd "a" paranccsal hozzáfűzést kezdeményeznénk.


RÖVIDÍTÉSEK

A gyakori operátor-tartomány parancsok egy karakteres parancsot kaptak:

	x  azaz  dl  (kurzor alatt lévő karakter törlése)
	X  azaz  dh  (kurzortól balra lévő karakter törlése)
	D  azaz  d$  (törlés a sor végéig)
	C  azaz  c$  (csere a sor végéig)
	s  azaz  cl  (karakter cseréje)
	S  azaz  cc  (teljes sor cseréje)


HOVÁ TEGYÜK A MENNYISÉGET

A "3dw" parancs és a "d3w" parancs három szót töröl. Ha nagyon pontosak
akarunk lenni, akkor az első parancs "3dw" egy szót töröl háromszor; a "d3w"
parancs egyszerre töröl három szót. Ha úgy kívánod, a mennyiséget
elhelyezheted mindkét helyre. Például "3d2w" két szót töröl, háromszor, azaz
összesen hat szót.


EGYETLEN EGY KARAKTER CSERÉJE

Az "r" parancs nem operátor. Arra vár, hogy begépeljünk egy karaktert, hogy a
kurzor alatt lévőt felülírhassa. Ugyanezt megteheted a "cl" vagy az "s"
parancsokkal, de az "r" parancs után nem kell <Esc> billentyűt ütni, hogy
visszalépjünk Normál módba. 

	there is somerhing grong here ~
	rT	     rt    rw

	There is something wrong here ~

Mennyiséggel használva az "r" az összesg karaktert ugyanarra ga karakterre
cseréli le. Például:

	There is something wrong here ~
			   5rx

	There is something xxxxx here ~

Karakter lecserélése sortörésre "r<Enter>". A mennyiség itt csak a törölt
karakterek számát határozza meg. "4r<Enter>" négy karaktert cserél, de csak
egy sortörést szúr be.

==============================================================================
*04.3*	Szerkesztés ismétlése

Az "." parancs a legegyszerűbb, de leghasznosabb Vim parancsok közé tartozik.
Megismétli a legutolsó szerkesztést. Például tegyük fel, hogy HTML fájlt
szerkesztesz és ki szeretnéd törölni a <B> taget. Az első < jelre
pozícionálod a kurzort, majd "df>" paranccsal megsemmisíted a taget, majd a
következő < jelre állsz, melyen a "." parancsot kiadva megismétlődik az utolsó
szerkesztésed "df>" és a tag eltűnik. 

			      To <B>generate</B> a table of <B>contents ~
	f<   ugrás <     --->
	df>  törlés eddig >     -->
	f<   következő <	   --------->
	.    df>ismétlése		    --->
	f<   következő <		       ------------->
	.    df> ismétlése				    -->

Az összes parancs megismételhető kivéve a visszavonást ("u"), CTRL-R (mégis)
és minden command-line parancsot (":").

Másik példa: Le szeretnéd cserlélni a "four" szót "five"-ra, mely többször is
előfordul a szövegben. Ezekkel a prancsokkal gyorsan teljesítheted a
feladatot:

	/four<Enter>	"four" keresése
	cwfive<Esc>	csere "five"-ra
	n		következő "four" 
	.		csere "five"-ra (ismétlés)
	n		következő "four" 
	.		csere "five"-ra (ismétlés)
			stb.

==============================================================================
*04.4*	Visual mód

Egyszerű elemeket az operátor-tartomány kombinációval törölhetünk. Gyakran 
viszont nem könnyű eldönteni, hogy az a adott parancs áthalad-e a kívánt 
szövegrészleten. Ekkor a legegyszerűbb megoldás a Visual mód használata.

A Visual módba "v" betű megnyomásával léphetünk be. Ha ebben a módban
elmozdítjuk a a kurzort, akkor aktív szöveget kiemeli a szerkesztő és
láthatóvá válik vizuálisan az a tartomány, amire operátor hatással lesz. 
   Például törlés a szó közepétől egy másik szó közepéig:

		This is an examination sample of visual mode ~
			       ---------->
				 velllld

		This is an example of visual mode ~

Ezzel a módszerrel nincs szükség észben tartanunk, hogy hányszor kell "l"
betűt gépelni, hiszen látjuk, hogy mi lesz kitörölve ha "d"-t ütünk.

Bármikor visszatérhetsz Normál módba <Esc> megnyomásával, ekkor a kijelölés
megszűnik és a szerkesztő Normál módba vált át.

SOROK KIJELÖLÉSE

Ha teljes sorokon szeretnél műveletet végrehajtani, akkor válts át Visual
módra "V". Az aktuális sor azonnal ki lesz jelölve anélkül, hogy a kurzort
megmozdítanánk. Balra és jobbra mozdulva semmi sem történik. Felfelés és
lefelé mozdulva viszont a kijelölés ki lesz terjesztve egész soronként.
   Például, jelölj ki három sort "Vjj":

			      +------------------------+
			      | text more text 	       |
		           >> | more text more text    | |
	kiválasztott sorok >> | text text text	       | | Vjj
		           >> | text more              | V
			      | more text more	       |
			      +------------------------+


BLOKKOK KIJELÖLÉSE

Ha négyzet alapú karakterblokkokon szeretnél műveleteket végrehajtani, akkor a
kijelölést a CTRL-V billentyűvel kezdheted el (Visual mód). Táblázatszerű
adatstruktúrák esetében a leghasznosabb:

		name		Q1	Q2	Q3
		pierre		123	455	234
		john		0	90	39
		steve		392	63	334

A középső "Q2" oszlop törléséhez állítsd a kurzort a "Q" betűre a "Q2"-ben.
Nyomj CTRL-V-t a blokk kijelöléséhez. Mozdulj el lefelé "3j", majd jelöld ki
az toszlopot ("w"). Ha mindent jól tcsinálál, akkort a kijelölés tartalmazni
 fogja az utolsó sor első karaktereit. "h" billentyűvel ezt meg tudod
 szüntetni, majd "d" parancs törli a teljes oszlopot.


MOZGÁS A MÁSIK OLDALRA

Ha a kijelölés során módosítani szeretnéd a kezdő (vagy vég-) pontokat, akkor
"o" paranccsal tudod a kijelölés határait bejárni. ("o", azaz other). Így
könnyedén igazíthatjuk a kijelölés tartományát anélkül, hogy újrakezdenénk a kijelölést. 

A blokk kijelölésnek négy sarka van. "o" csak a bal átló mentén vált (bal
felső és jobb alsó sarok), "O" billentyű azonban a soron belül váltja a
sarkokat.

Megjegyzés: "o" és "O" merőben másként működik ebben a módban (Normál módban a
kurzor alá vagy fölé új sort nyit).

==============================================================================
*04.5*	Szöveg mozgatása

A "d", "x" és más egyéb törlő parancsok a szöveget elmetnik. A "p" (put)
paranccsal beilleszthetővé válnak a törlés után. 
   Vessünk egy pillantás a működésre. Elsőként, törölj egy teljes sort a "dd"
paranccsal, aztán állítsd a kurzort arra a sorra, ahová be szeretnéd másolni
(a beillesztett sor az aktív sor alá kerül).

	a line		a line	      a line
	line 2	  dd	line 3	  p   line 3
	line 3			      line 2

Mivel egy teljes sort töröltél, az új sor a kurzor alá kerül. Ha csak egy
részletet törölsz (például csak egy szót), akkor "p" parancs a kurzor után
illeszti be az adott szöveget.

	Some more boring try text to out commands. ~
			 ---->
			  dw

	Some more boring text to out commands. ~
			 ------->
			    welp

	Some more boring text to try out commands. ~


MÉG TÖBB A BEILLESZTÉSRŐL

A "P" parancs a kurzor elé illeszt be (ha a tartomány kevesebb, mint egy sor). Teljes sor törlése esetén a kurzor fölé. 

A beillesztést tetszőleges alkalommal beillesztheted (amíg egy másik törlő
parancs felül nem írja az aktuális regiszter tartalmát).

"p" és "P" parancsok hívhatóak mennyiséggel. Például "dd" után "3p" három sort
illeszt be a törölt sorból.


KÉT KARAKTER CSERÉJE

Gépelés során az agyad gyakran előrébb jár az ujjaidhoz képest (vagy
fordítva?). Az eredmény egy typo, például "teh" a "the" helyett. A Vim
megkönnyíti az ilyen jellegű hibák korrigálását. Állítsd a kurzort az e betűre
a "teh" szóban és futtasd az xp parancsot.Működése: az "x" törli az e
karaktert, melyet tárol a regiszterben, "p" parancs pedig a kurzor után
beilleszti a regiszter tartalmát.

	teh     th     the ~
	 x       p

==============================================================================
*04.6*	Szöveg másolása

A másoláshotsz kitörölhetsz valamit, amit aztán "u" paranccsal vissza tudsz
vonni, az eredmény pedig a regiszter tartalma, ami másolhatóvá válik. Van
ennél egy könnyebb módszer: a másolás (yanking). Az "y" operátor szöveget
másol a regiszterbe (amit ugyanúgy másolhatunk, mintha töröltük volna). 
   A Vim yakingként hivatkozik a másolásra. A "c" betű már le volt foglalva a
csere operátor számára, de az "y" még szabad volt. Egyébként, a parancs memorizálásában is segít "y", azaz "yank". 

Az "y" egy operátor, tehát használhatjuk ebben a formában: "yw" egy szó
másolására, mennyiséggel prefixálható. "y2w" két szót másol. Péládul:

	let sqr = LongVariable * ~
		 -------------->
		       y2w

	let sqr = LongVariable * ~
			       p

	let sqr = LongVariable * LongVariable ~

Vedd észre, hogy a "yw" a szó utáni szóközt is tartalmazza. Ha nem szeretnéd a
szóközt, akkor "ye" (a szó végéig).

A "yy" egy teljes sort másol, hasonlóan a "dd"-hez, ami egy teljes sort töröl.
Meglepően, "D" a korzortól a sor végéig töröl, de "Y" "yy"-ként működik (egy
teljes sort másol). Figyelj oda erre az inkonzisztenciára. Kurzortól a sor
végéig való másoláshoz a "y$" parancs használatos.

	a text line   yy	a text line	       a text line
	line 2			line 2		p      line 2
	last line		last line	       a text line
						       last line

==============================================================================
*04.7*	Vágólap használata

Ha a Vim GUI verzióját használod, akkor a másolást megtalálhatod a
"Szerkesztés" menüben. Jelölj ki egy szöveget, majd kattints a
Szerkesztés/Másolás menüpontjára, amit más programokban is beilleszhetsz (nem
csak a Vimben).

A vágólap tartalmat (melynek forrása egy külső program), a
Szerkesztés/Beillesztés menüpontjával tudod beilleszteni. Ez működik Normál és
Insert módban. A Visual módban a kijelölt szöveget felülírja a bemásolt
tartalom.

A "Kivágás" menüpont törli a szöveget, mielőtt a vágólapra helyezné. a
"Másolás", "Kivágás" és "Beillesztés" parancsok elérhetőek a környezeti
menüből (ha a menü engedélyezett és be van állítva). Ha van eszköztárad,
ezeket a funkciókat ott is megtalálhatod.

Ha nem a GUI szerkesztőt használod (vagy ha nem vagy a menüs használat híve),
akkor kiindulópont teljesen más. Használhatod a "y" és "p" parancsokat, de "*
karaktereket a parancs elé kell tenned: >

	"*yy

Másoláshoz: >

	"*p

Ez azonban csak akkor működik, ha A Vim olyan verzióját használod, mely
támogatja a vágólap-használatot. (clipboard support). Ezekről bővebben a
|0.93| fejezetben és itt: |clipboard|.

==============================================================================
*04.8*	Szöveg-objektumok

Ha a kurzor a szó közepén áll, melyet törölni szeretnél, vissza kell menned a
szó elejére, hogy kiadhasd a "dw" parancsot. Az egyszerűbb módszer: "daw".

	this is some example text. ~
		       daw

	this is some text. ~

A "d" a "daw" parancsban egy törlő operátor. "aw" pedig egy szöveg-objektum.
Jelentése: "A word" (A szót). Ezért "daw" "töröli A szót". Pontosaban
fogalmazva a szöközöket is a szó előtt és után (ha a szó a sor végén van,
akkor csak előtte).

Harmadik módszer a szöveg-objektumok használata. Az operátor-tartomány és a
Visual módot már tisztáztuk. Ehhez mos hozzáadjuk a szöveg-objektumokat. 
   Nagyon hasonlóan működik az operátor-tartománykhoz képest, de ahelyett,
hogy kurzor pozíciójához viszonyított tartományhoz végeznénk műveletet, teljes
egészében a szöveg az objektum. Lényegtelen, hogy a mávelet előtt hol
tartózkodott a kurzor.

Teljes mondat cseréje "cis" (Change In Sentence), legyen az alábbi:

	Hello there.  This ~
	is an example.  Just ~
	some text. ~

Vidd a kurort az "is an" szavak egyikére, majd "cis":

	Hello there.    Just ~
	some text. ~

A kurzor a két mondat közé kerül. Most írd be "Another line.":

	Hello there.  Another line.  Just ~
	some text. ~

A "cis" parancs struktúrája: "c" (csere - change) operátor és az "is"
szöveg-objektum (Inner Sentence). Természetesen létezik a párja, "as" (A
Sentence - A mondatot) objektum.
Az "as" objektum törli a mondat utáni szóközöket, az "is" viszont nem. Ha
törölni szeretnéd a teljes mondatot, akkor logikus, ha a szóközöket is törlöd
vele egyetemben, ezért a "das" a legmegfelelőbb választás. Ha csak cserélni
szeretnéd a szóközök megtartásával, akkor perdig "cis".

A szöveg-objektumok Visual módban is használhatóak, a kijelölés részévé teszi
az adott objektumot, de nem lép ki a Visual módból, így egymás után
alkalmazhatóak az objektumok. Páldául lépj be Visual módba "v", majd jelölj ki
egy teljes modatot "as". Most ismételd meg "as"-t még egy mondat
kijelöléséhez. Végezetül válassz egy operátort, ami egy műveletet végez az
adott kijelölésen.

A szöveg-objektumokról egy egészen hosszú lista található itt:
|text-objects|.

==============================================================================
*04.9*	Csere mód

Az "R" parancs hatására a Vim csere módra vált. A beglpelt karakterek
lecserélik a kurzor alatt lévő karaktereket, mindaddig, amíg <Esc>
billentyűvel ki nem lépsz csere módból.
   A példában a "text" szó "t" karakterénél lépünk csere módba:

	This is text. ~
		Rinteresting.<Esc>

	This is interesting. ~

Ha figyelmes vagy, észrevehetted, hogy a művelet 5 karaktert cserélt le 12-re.
Az "R" parancs automatikusan meghosszíbítja a sort, ha a lecserélendő
karakterek elfogytak, nem kezd új sort.

Insert és Replace mód között az <Insert> billentyűvel tudsz váltanni.

Ha <BS> (backspace) billentyűvel korrigáltál, akkor a régi szöveget a program
otthagyja. 

==============================================================================
*04.10*	Összefoglalás

Az operátorok, mozgási parancsok és a szöveg-objektumok rengeteg kombinációt
rejtenek. Most, hogy ismered a működésüket, használhatsz N operátort, M
tartománnyal, ami már N * M prancs!

Az operátorok listáját itt találod: |operator|.

Páldául, a törlésre megannyi opció létezik. Itt vannak a leggyakoriabbak:

x	törlés a kurzor alatt (azaz "dl")
X	törlés a kurzor előtt (azaz "dh")
D	törlés kurzortól sor végéig (azaz "d$")
dw	törlés a következő szóig
db	törlés előző szó elejétől
diw     kurzor alatt lévő szó (exkluzív)
daw	kurzor alatt lévő szó (inkluzív)
dG	törlés fájl végéig
dgg	törlés elejéig

Ha a "d" helyett "c" parancsot használsz, akkor a működés éretelemszerűen
változik. Ha "y"-t akkor úgyszintén, és így tovább.


Továbbá pár be nem kategorizálható parancs:

	~	Nagy- kisbetű cseréje, kurzor jobbra. Ez nem operátor (amíg a
		'tildeop' nincs beállítva), ezért nem lehet tartománnyal
		használni. Visual módban működik, ahol a kijelölés összes
		karakterén végrehajtja a műveletet.

	I	A kurzor a sor első nem üres karakterére ugrik, majd Insert
		mód.

	A	A kurzor a sor végére ugrik, majd hozzáfűzés.

==============================================================================

Következő fejezet: |usr_05.txt|  A beállításaid

Jogi Információk: lásd |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
