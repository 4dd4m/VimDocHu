*usr_06.txt*	For Vim version 8.2.  Last change: 2019 Jun 01

		  Bram Moolenaar: Vim Felhasználói Kézikönyv

		       Szintaxis kiemelés használata


Unalmas a fekete-fehér szöveg. A színek életre keltik fájljaid. Nem csak
szépen néz ki, de a munkát is felgyorsítja.

|06.1|	Bekapcsolás
|06.2|	Nincsenek, vagy rossz színek?
|06.3|	Különböző színek
|06.4|	Színekkel és anélkül
|06.5|	Nyomtatás színekkel
|06.6|	További irodalom

Következő fejezet: |usr_07.txt|  Több fájl szerkesztése
    Előző fejezet: |usr_05.txt|  A beállításaid
  Tartalomjegyzék: |usr_toc.txt|

==============================================================================
*06.1*	Bekapcsolás

Az egész egy egyszerű paranccsal kezdődik: >

	:syntax enable

A legtöbb szituációban ez már színt visz a fájljaidba. A Vim felismeri a
fájltípust és annak megfelelő kiemelést tölt be. Hirtelen a kommentek kékek, a
kulcsszavak barnák, a stringek vörösek. Ez teszi áttekinthetővé a fájlt.
Később észre fogod venni, hogy a pusztán fekete-fehér szöveg nagyon lelassít.

Ha konstans szeretnéd a funkciót használni akkor ":syntax enable" parancsot
kell beírnod a  |vimrc| fájlodba.

Ha csak akkor szeretnél szintaxis kiemelést használni, ha a terminálod
támogatja a színeket, akkor ezt add hozzá a |vimrc| fájlodhoz: >

	if &t_Co > 1
	   syntax enable
	endif

Ha csak kizárólag a GUI verzióban szeretnél élni ezzel a lehetőséggel, akkor
":syntax enable"-t kell betenned a |gvimrc| fájlba.

==============================================================================
*06.2*	Nincsenek, vagy rossz színek?

Számos oka lehet, ha nem látsz színeket:
There can be a number of reasons why you don't see colors:

- A terminálod nem támogatja a színes megjelenítést.
	A Vim nem csak színesen, de a fékövér és dőlt karaktereket is képes
	megjeleníteni, amely nem minden esetben produkál kellemes kinézetet.
	Unix rendszeren az xterm terminált javaslom, ami az XFree86 projekt
	része: |xfree-xterm|.

- A terminálod nem támogatja a színes megjelenítést és a Vim erről nem tud.
	Győződj meg arról, hogy a $TERM beállításod helyes. Például, xterm
	használata esetén: >

		setenv TERM xterm-color
<
	vagy (a shelledtől függően): >

		TERM=xterm-color; export TERM

<        A terminál nevének meg kell egyezni az általad használttal. Ha még
	most sem működik, akkor olvasd el ezt |xterm-color|, amiben találsz
	pár módszert arra, hogy hogyan lehet színeket megjeleníteni a Vimmel
	(nem csak xterm terminálokhoz).

- A fájltípus felismerés sikertelen volt.
	Az összes fájltípus ismerete szinte lehetetlen, ezért tájékoztatni
	kell a Vimet, hogy milyen fájllal van dolga. A parancs: >

		:set filetype
<
	Ha a végeredmény "filetype=", akkor a Vim valóban nem ismeri az adott
	fájlt. A fájltípust manuálisan kell beállítani: >

		:set filetype=fortran

<        Az elérhető típusok megtekintéséhez tekintsd meg a $VIMRUNTIME/syntax
	könyvtár tartalmát. GUI üzemmódban elérhető a Syntax menü. A fájltípus
	beállítása |modeline|-al is lehetséges, így a minden egyes
	szerkesztésnél alkalmazva lesz a beállítás. Például az alábbi sort
	kell elhelyeznünk a fájl elejére, vagy végére: >

		# vim: syntax=make

<        Talán már ismered a módszert, mellyel manuálisan is meghatározhatod a
	fájltípust. Ennek egyik módja a fájl kiterjesztésének megadása
	(általában a fájlnév utolsó "." mögötti rész). Ha olyan fájllal
	találkoztál, amit a Vim tényleg nem ismer, itt tudhatsz meg többet az
	új fájltípusokról: |new-filetype|.

- Nincs kiemelés az adott fájltípushoz.
	Megpróbálkozhatsz egy másik fájltípus kiemelésének (manuális)
	alkalmazásával. Ha ez nem elég jó, hozd létre a saját szintaxis-fájlodat,
	lásd: |mysyntaxfile|.

Ha a színek rosszak:

- A színes szöveg olvasása általában nehézkesebb.
	A Vim megpróbálja kitalálni az érvényben lévő háttér színét. Ha ez
	fekete (vagy egyéb sötét szín), akkor a szöveg színét világosra
	cseréli. Ha a hattér fehér (vagy egyéb világos szín), akkor pedig
	sötétre. Ha a Vim tévedett és rosszul tippelt, akkor a szöveg szinte
	olvashatatlanná válik. A probléma megoldására manuálisan kell
	beállítanunk a háttér színét a 'background' változóval: >

		:set background=dark

<	Világos színhez: >

		:set background=light

<        A sornak mindenképpen a ":syntax enable" parancs __elé__ kell kerüljön,
	különben addigra a háttérszín már beállításra került. A ":syntax
	reset" parancsot használhatod a 'background' beállítása után, így a
	Vim újból beállítja az alapértelmezett színeket.

- A színek rosszal felfelé görgetésnél
	A szerkesztőben megnyitott fájlok nincsenek teljes egészében
	beolvasva. Csak annyi, amennyit az ablakban látni lehet. Ezzel
	rengeteg időt lehet spórolni, esetenként a színek kárára. Az
	ideiglenes megoldás: üss CTRL-L-t, vagy görgess hátra aztán újból
	előre.
	A probléma valódi megoldása |:syn-sync|. Egyes szintaxis fájloknál van
	mód az alkalmazott tartomány bővítésére, ez azonban a szintaxis help
	fájljából derül ki. Például |tex.vim| a TeX szintaxishoz.

==============================================================================
*06.3*	Eltérő színek				*:syn-default-override*

Ha nem tetszenek az alapértelmezett színek, akkor megváltoztathatod. GUI módban
a Szerkesztés/Színséma menüpont alatt, vagy ezzel a paranccsal: >

	:colorscheme evening

"evening" a színséma neve. Létezik több is, próbáld ki őket. Látogasd meg a
$VIMRUNTIME/colors könyvtárat.

Ha megtaláltad a legszebbet, akkor hozzáadhatod a |vimrc| fájlodhoz:
":colorscheme".

Létrehozhatod a saját színsémádat is. Így csináld:

1. Válassz egy olyan színsémát, ami a legközelebb áll az elképzeléseidhez.
   Másold be ezt a fájlt a saját Vim könyvtáradba. Unixon ez működni fog: >

	!mkdir ~/.vim/colors
	!cp $VIMRUNTIME/colors/morning.vim ~/.vim/colors/mine.vim
<
   Ennyi elég a Vim számára, hiszen ismeri a $VIMRUNTIME könyvtárat.

2. Szerkeszd a színséma fájl. Az alábbi bejegyzések hasznosak:

	term		Fekete-fehér terminál tulajdonságai
	cterm		Színes terminál tulajdonságai
	ctermfg		betűk alapszíne (színes terminál)
	ctermbg		háttér színe (színes terminál)
	gui		GUI tulajdonságai
	guifg		GUI betűk alapszíne
	guibg		GUI háttér színe

       Például a kommentek zölddé tételére: >

	:highlight Comment ctermfg=green guifg=green
<
   Az egyéb alkalmazható stílusok a "cterm" és a "gui" számára a "bold"
   (félkövér) és "underline" (aláhúzott). Ha mindkettőt szeretnéd, akkor a
   meghatározás "bold,underline". Részletekért olvasd el a |:highlight|
   parancsot.

3. Színséma alkalmazása minden alkalommal. Másold be a |vimrc|be: >

	colorscheme mine

A leggyakrabban használt színsémák megtekintéséhez futtasd: >

	:runtime syntax/colortest.vim

Így könnyedén dönthetsz az olvashatóságról és kinézetről.

==============================================================================
*06.4*	Színekkel vagy anélkül

A színes szövegek megjelenítése sok erőforrást igényel. Ha lassúnak találod a
megjelenést, akkor érdemes egy próbát tenni színek nélkül: >

	:syntax clear

Új fájl szerkesztésekor a színek vissza fognak térni.

Ha teljesen meg szeretnéd szüntetni a kijelölést: >

	:syntax off

A parancs azonnal megszünteti a kiemelést (az összes bufferben). Lásd
|:syntax-off|.

							*:syn-manual*
Ha az adott fájlra egy eltérő kiemelést szeretnél betölteni: >

	:syntax manual

A parancs csak átállítja a kiemelést (azaz a új buffer betöltésekor a régi
kiemelés alkalmazódik).

A szintaxis kiemelés bekapcsolása az aktuális bufferben, lásd 'syntax': >

	:set syntax=ON
<
==============================================================================
*06.5*	Nyomtatás színekkel				*syntax-printing*

MS-Windows platformon a nyomtatás megkezdéséhez az alábbi parancs áll
rendelkezésre: >

	:hardcopy

A felbukkanó ablakban kiválaszthatod a nyomtatót, illetve egyéb alapvető
nyomtatási beállításokat. Ha színes nyomtatód van, akkor a nyomatnak ugyanúgy
kell kinézni, mint a Vimben. Ha sötét hátteret használsz, akkor a Vim
korrigálni fog, hogy papíron jól nézzen ki.

A nyomtatási beállításokat számos változó befolyásolhatja:
	'printdevice'
	'printheader'
	'printfont'
	'printoptions'

Tartományok nyomtatásához végezd el a kijelölés Visual módban, majd add ki a
parancsot: >

	v100j:hardcopy

"v" Visual módra vált. "100j" száz sort jelöl ki lefelé. Végül ":hardcopy"
kinyomtatja a kijelölést. Természetesen más mozdulatokkal is kijelölhettük
volna a szöveget. A 100 sor csak egy példa volt.

A módszer csak akkor működik, ha PostScript nyomtatód van. Más esetben a
művelet egy kicsit több munkát igényel: át kell konvertálnod a szöveget HTML
formátumba, és a böngészőből kezdeményezni a nyomtatást.

Konvertálás HTML formátumba: >

	:TOhtml

Ha ez nem működik: >

	:source $VIMRUNTIME/syntax/2html.vim

Nagy fájloknál hosszú ideig is eltarthat a konvertálás. A kód egy új ablakban
fog megjelenni. Ezt mentsd el valahová (nem számít hová, hiszen nem lesz rá
szükség):
>
	:write main.c.html

Nyisd meg a fájlt a böngészőben és nyomtasd ki onnan. Ha minden rendben
történt, akkor a szövegnek ugyanúgy kell kinéznie, ahogy azt a Vimben látod.
Lásd |2html.vim|. Ne felejtsd el törölni az ideiglenes fájlt.

Nyomtatás helyett töltsd fel a fájlt egy webszerverre, ott is színesen fog
megjelenni.

==============================================================================
*06.6*	További Irodalom

|usr_44.txt|  A saját szintaxis kiemelésed
|syntax|      Az összes részlet

==============================================================================

Következő fejezet: |usr_07.txt|  Több fájl szerkesztése

Jogi információk: lásd |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
