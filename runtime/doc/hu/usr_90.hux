*usr_90.txt*	For Vim version 8.2.	Last change: 2020 Jun 11

		  Bram Moolenaar: Vim felhasználói kézikönyv

			       A Vim telepítése

								*install*

Használat előtt telepítenünk kell a Vimet. Rendszerünktől függően a folyamat
könnyű, vagy akár nehéz is lehet. A fejezet tippeket és elmagyarázza, hogy
hogyan frissítsünk új verzióra

|90.1|	Unix
|90.2|	MS-Windows
|90.3|	Frissítés
|90.4|	Gyakori telepítési problémák
|90.5|	Uninstalling Vim

  Előző fejezet: |usr_46.txt|  Vim9 beépül írása
Tartalomjegyzék: |usr_toc.txt|

==============================================================================
*90.1*	Unix

A telepítés első kérdése, hogy rendszerszintű, vagy felhasználó szintű
telepítést szeretnénk végrehajtani. A telepítés közel azonos mindkét esetben,
csak a telepítés könyvtára különbözik.
   A rendszerszintű telepítés általános könyvtára a "/usr/local", mely
disztribúciónként eltérő lehet.
   Ha csak egy felhasználó számára szeretnénk telepíteni, akkor a home
könyvtárunkat használjuk. Az alkönyvtárak a "bin" és a "shared/vim"-be
kerülnek.


TELEPÍTÉS CSOMAGBÓL

Az előre lefordított állományok az összes UNIX disztribúcióra letölthető. Az
alábbi linken találhatunk egy hosszabb listát:
You can get precompiled binaries for many different UNIX systems.  There is a
long list with links on this page:

	http://www.vim.org/binaries.html ~

Önkéntesek tartják karban, ezért sokszor elavult lehet. Jó ötlet, ha magadnak
fordítod forrásból, melyhez rendelkezned kell egy fordítóval, ellenben totális
kontroll alá veheted a telepített modulok listáját.

Ha Linux rendszered van, akkor a "vi" program talán a Vim legminimálisabb
megfelelője. Nincs szintaxis kiemelés például.


TELEPÍTÉS FORRÁSBÓL

A Vim fordításához és telepítéséhez az alábbiakra van szükséged:

	-  C fordító (GCC ajánlott)
	-  GZIP program (innen töltheted le www.gnu.org)
	-  A Vim forráskódjára

A Vim archívumainak letöltéséhez válaszd ki a listában a hozzád legközelebb
álló tükörkiszolgálót:

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

Vagy látogass el: ftp.vim.org, ha a letöltési sebesség megfelelő. Nyisd meg a
"unix" könyvtárat, ahol a listát megtalálod. A verziószám fel van tüntetve a
fájlnévben. Töltsd le a legfrissebbet.
   A fájlokat egy nagy archívumként is letöltheted, amely tartalmaz mindent:

	vim-8.2.tar.bz2 ~

Melyet a bzip2 programmal tudsz kibontani.


FORDÍTÁS

Hozzuk létre a munkakönyvtárat, például: >

	mkdir ~/vim
	cd ~/vim

Bontsd ki az archívumot ide: >

	tar xf path/vim-8.2.tar.bz2

Ha a tar programod nem támogatná a bz2-t közvetlenül: >

	bzip2 -d -c path/vim-8.2.tar.bz2 | tar xf -

Helyettesítsd a "path" szót a saját elérési utaddal.
Ha elégedett vagy az alapvető funkciókkal és a környezeted is megfelelően van
beállítva, akkor a Vimet így tudod lefordítani: >

	cd vim82/src
	make

A make program lefuttatja a configure parancsot, ami mindent lefordít. A
továbbiakban kitérünk arra, hogy hogyan fordítsunk csak bizonyos modulokat.
   Ha hibaüzenetbe futunk, akkor próbáljuk meg értelmezni őket. Remélhetőleg
sikerül kijavítanunk a hibát. Előfordulhat, hogy bizonyos modulokat le kell
tiltanunk a fordítás előtt. A Makefile vizsgálata jó kiindulópont.


TESZTELÉS

A fordítás ellenőrzése: >

	make test

Ezzel számos tesztet futtathatunk, amely (sikeres esetén) garantálja a
Vim működését. A szerkesztő elindul pár alkalommal, üzenetek villannak fel, de
ha minden rendben van, akkor ezt láthatjuk.

	test results: ~
	ALL DONE ~

Ha az végeremény "TEST FAILURE", akkor pár teszt nem sikerült. Ha csak egy-két
hibaüzenetet kapunk, akkor elképzelhető, hogy a Vim még működhet. Ez nem
garantál akkor, ha viszonylag sok hibaüzenettel találkozunk, vagy a fordítási
foyamat a vége előtt megszakad. A hibát magunk es javíthatjuk, vagy másokra is
rábízhatjuk. Érdemes körülnézni a |maillist-archive|-ban, háhta találunk
megoldást. Legutolsó esetben megkérhetünk valakit a |mailliesten| keresztül.


TELEPÍTÉS
							*install-home*
A home könytárba való telepítéshez szerkesszük a Makefilet az alábbiak
szerint:

	#prefix = $(HOME) ~

Távolítsuk el a sor elejéről a # jelet.
   Ha rendzserszinten telepítjük, akkor a Vim nagy valószínűséggel a jó
   telepítési könyvtárra van beállítva. Ezen változtathatunk, ha root
   felhasználók vagyunk.

Telepítési parancs >

	make install

A parancs összegyűjti a szükséges fájlokat. Kipróbálhatjuk a futtatást, hogy
megbizonyosodjunk róla, hogy tényeg működik. Az alábbi két teszttel a Vim
runtime fájljainak elérését tesztelhetjük: >

	:help
	:syntax enable

Ha nem működik, akkor a parancsot a runtime elérési út ellenőrzésére tudjuk
használni: >

	:echo $VIMRUNTIME

Indíthatunk "-V" argumentummal, mely beszédesebb kimenetet generál: >

	vim -V

Ne felejtsük el, hogy a dokumentáció feltételezi, hogy a Vimet a megfelelő
módon használjuk. Telepítés után kövessük a |not-compatible| opcióit.


MODULOK KIVÁLASZTÁSA

Ezt több módon is megtehetjük. A legegyszerűbb, ha a Makefájlt szerkesztjük.
Sok példát láthatunk. Többnyire a modulokat egy sor kommentélésével
engedéyezhetjük.
   Alternatívaként a "configure"-t külön is lefuttathatjuk, az opciók között
mi választhatunk. Ennek az a hátránya, hogy tudnunk kell mi mit jelent.
   Néhány érdekes argumentum, melyeket természetesen a Makefileban tovább
szerkeszthetünk.

	--prefix={directory}		A Vim telepítési könyvtára

	--with-features=tiny		A modulok kis részének engedélyezése
	--with-features=small		A modulok egy részének engedélyezése
	--with-features=big		A legtöbb modul engedélyezése
	--with-features=huge		A lehető legtöbb modul engedélyezése
					See |+feature-list| for which feature
					is enabled in which case.

	--enable-perlinterp		Perl interfész engedélyezése. Hasonló
					argumentumok léteznek ruby, python és
					tcl-hez.

	--disable-gui			Ne fordítsa a GUI komponens
	--without-x			Ne fordítsa az X ablakkezelő
					támogatását. Így a Vim nem fog az
					X-hez kapcsolódni (gyorsabb indítás).

A teljes lista: >

	./configure --help

Egy rövid magyarázattal megismerhetjuk a modulok funkcióit, a linkek
segítségével pedig tovább tanulmányozhatjuk a modult: |feature-list|.
You can find a bit of explanation for each feature, and links for more
information here: |feature-list|.
   Kalandorok akár szerkeszthetik a "feature.h" fájlt, valamint
megváltoztathatják a forráskódot is.

==============================================================================
*90.2*	MS-Windows

A telepítésnek két módja létezik. Fordíthatjuk forrásból, vagy installer
segítségével. A legtöbb felhasználó az utóbbi módszert választja. Az előbbi
módszer követelményei:

	- A Vim bináris állományait tartalmazó archívum
	- A Vim runtime archívum.
	- Program a zip fájlok kezeléséhez

Az archívum letöltéséhez válassz tükörkiszolgálót az alábbi listából: >

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

Vagy töltsd le az állományokan a ftp.vim.org-ról. A "pc" köynvtárba kell
belépnünk. A verziószámokat a név tartalmazza, válassszuk a legfrissebbet. Mi
itt a 8.2 verziót mutatjuk be:

	gvim82.exe		A telepítő

Csak ennyi szükségeltetik a második módszerhez. Indítsuk el a fájlt és
kövessük az utasításokat.

Az első módszerhez ki kell választanunk a bináris archívumot, melyek lehetnek:

	gvim82.zip		A normál MS-Windows GUI verziója.
	gvim82ole.zip		MS-Windows GUI verzióka OLE támogatással.
				Több memóriát használ, támogatja az OLE
				interfészek használatát.
	vim82w32.zip		32 bites MS-Windows konzol verzió.

Ezek közül csak egyre van szükségünk. Mindegyik verziónak létezik GUI és
konzolos változata is. A runtime fájlokat mindig le kell töltenünk.

	vim82rt.zip		runtime fájlok

Bontsuk ki az állomyánt. Például, az "unzip" programmal: >

	cd c:\
	unzip path\gvim82.zip
	unzip path\vim82rt.zip

A művelet végeztével fájljaink a "c:\vim\vim82" mappába kerülnek.
   Lépjünk be a "c:\vim\vim82" könyvtárba és installáljuk a programot: >

	install

Figyelmesen olvassunk el mindent és válasszuk ki az opciókat. Vegül a "do it"
kiválasztásával a program elindítja a máveletet.
   A runtime fájlok helye nem változik a telepítés során. Ott maradnak, ahová
   kibontottuk őket.

Abban az esetben, ha nem vagyunk megelégedve a Vim funkcióival, magunk is
megpróbálkozhatunk a fordítással. Töltsük le a forráskódot onnan, ahonnan a
bináris állományokat töltöttük le. Egy fordítóra szükségünk lesz. Microsoft
Visual C, MinGW és Cygwin fordítókat használhatjuk. Olvassuk el az
src/INSTALLpc.txt fájlt további tippekért.

==============================================================================
*90.3*	Frissítés

Ha már rendelkezel egy Vim telepítéssel, de egy másikat szeretnél telepíteni:


UNIX

A "make parancs" kiadása után a runtime fájlok az aktuális verzióhoz tartozó
könyvtárba másolódnak. Ezért gond nélkül dolgozhatunk több verzióval is.
   A futtatható "vim" felülírja a régi versziót. Ha nem érdekel a régi verzi
megtartása, akkor "make install" parancs megfelelő. A régi runtime fájlokat
törölhetjük manulisan. Csak töröljük ki a verziószámmal ellátott könyvtárat.
Példáuk: >

	rm -rf /usr/local/share/vim/vim74

Normális esetben a beállításokat szabályzó fájlok nem változnak. Ha
megváltoztattad mondjuk a "filetype.vim" fájlt, akkor másold a fájlt az új
verzió könyvtárában.

Ha óvatos vagy és az új verziót csak ideiglenesen szeretnéd kipróbálni,
mielőtt véglegesen válatanál, telepítsd az új verziót más néven. Ehhez egy
argumentumot kell átadnunk. Például: >

	./configure --with-vim-name=vim8

A "make install" előtt a "make -n install" paranccsal biztosíthatjuk, hogy az
értékes már lérező fájlok nem fognak felülíródni.
   Amennyiben végelegesen az új verzió mellett döntünk, akkor csak annyit kell
tennünk, hogy átnevezzük a könyvtárak. Például: >

	mv /usr/local/bin/vim8 /usr/local/bin/vim


MS-WINDOWS

A frissítés gyakorlatilag megegyezik egy új verzió telepítésével. Csak bontsd
ki  a fájlokat az előző verzióval megegyező helyre. Új könyvtár lesz
létrehozva például "vim82" az új fájlok számára. A runtime fájlok, a vimrc
fájl és a viminfo érintetlenül lesz hagyva.
   Ha mindkét verziót szeretnéd használni, akkor további műveletekre van
szükségünk. Ne telepítsd egyből a programot, mert ez régi verzió fájlainak egy
részét felülírja. Futtasd a bináris állományt a teljes elérési utat megadva. A
szerkesztő automatikusan megtalálja a verzióhoz tartozó runtime fájlokat. Ez
nem műdödik, ha előzőleg a $VIMRUNTIME változót már átállítottad.
   Ha elégedett vagy a frisítéssel, akkor az előző verzió fájljait
letörölheted. Lásd |90.5|.

==============================================================================
*90.4*	Gyakori telepítési problémák

Ebben a fejezetben bemutatjuk a leggyakoribb problémákat és megoldásait,
melyek a telepítési folyamat során jelentkezhetnek. Választ kaphatunk a
leggyakoribb kérdésekre.


Q: Nincs root jogosultságom.  Hogyan telepíthetem (Unix)?

Használd az alábbi konfigurációs parancsot, így a Home könyvtáradba történik a
telepítés: >

	./configure --prefix=$HOME

Ez lesz a személyes Vim másolatod. A szerkesztő indításához hozzá kell adni a
$HOME/bin utata path-hoz. Lásd |install-home|.


Q: A színekkel van problémám. (Unix)

Ellenőrizd a terminálod beállításait: >

	echo $TERM

Ha az érték nem megfelelő, akkor javítsd ki. További segédletek |06.2|. Opció
lehet, ha kizárólag a Vim GUI verzióját használod (gvim), mellyel
elkerülhetjük a terminált érintő beállításokat.


Q: A <Backspace> és <Delete> billetnyűim nem működnek jól

A <BS> és <Del> esetében a billentyűk álatal elküldött kód eléggé bizonytalan.
Először is, ellenőrizd a $TERM értékét Ha a beállítás jó, akkor próbáld ki
ezeket: >

	:set t_kb=^V<BS>
	:set t_kD=^V<Del>

Az első sorban CTRL-V-t kell ütni és utánna <Backspace> billentyűt. A második
sorban CTRL-V, majd <Delete> billetnyű. A két sort bemásolhatjuk a vimrc
fájlba, lásd |05.1|. Az értékeket felül kell vizsgálna, ha új terminált
használunk. Alternatív megoldások: |:fixdel|.


Q: Red Hat Linuxot használok.  Használhatom a rendszeremre telepített Vimet?

A RedHat disztribúciók a Vim minimális verzióját tartalmazzák. Nézd meg az RPM
csomagokat, keress valami olyasmit, hogy "Vim-enhanced-version.rpm" és
telepítsd fel.


Q: Hogyan kapcsolhatom be a szintaxis kiemelést?  Hogyan használhatom a
   bépülőket?

Használd a példa vimrc szkriptet. Magyarázatot hozzá itt találsz: 
|not-compatible|.

A szintaxis kiemelés a 6. fejezetben részletesen ki van fejtve: |usr_06.txt|.


Q: Hogyan néz ki egy jó vimrc fájl?

A www.vim.org oldalon találhatsz jó példákat.


Q: Hol találhatok jó beépülőket?

A Vim-online oldalán: http://vim.sf.net.  Melyre már sok hasznos beépülőt
feltöltöttek.


Q: Hogyan találok új tippeket?

http://vim.sf.net.  Keresd az archvívumot, amely a Vim tippekről (hint), szól.
A levelezőlistában is kereshetsz: |maillist-archive|.

==============================================================================
*90.5*	A Vim törlése

Ha teljesen el szeretnénk távolítani a Vimet, így kell eljárnunk.


UNIX

Ha a Vimet a csomagkezelőnk segítségével telepítettük, akkor a törlést a
csomagkezelőnk fogja elvégezni.
   Ha a a Vimet forrásból telepítettük, akkor ezzel a paranccsal tudjuk
eltávolítani: >

	make uninstall

Abban az esetben, ha az eredeti fájlt töröltük, vagy más forrásból származó
archívumot használtunk, ezt nem tehetjük meg. A törlés manuálisan történik,
itt egy példa, ha a telepítés alapkönyvtára "/usr/local/" volt: >

	rm -rf /usr/local/share/vim/vim82
	rm /usr/local/bin/eview
	rm /usr/local/bin/evim
	rm /usr/local/bin/ex
	rm /usr/local/bin/gview
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvimdiff
	rm /usr/local/bin/rgview
	rm /usr/local/bin/rgvim
	rm /usr/local/bin/rview
	rm /usr/local/bin/rvim
	rm /usr/local/bin/rvim
	rm /usr/local/bin/view
	rm /usr/local/bin/vim
	rm /usr/local/bin/vimdiff
	rm /usr/local/bin/vimtutor
	rm /usr/local/bin/xxd
	rm /usr/local/man/man1/eview.1
	rm /usr/local/man/man1/evim.1
	rm /usr/local/man/man1/ex.1
	rm /usr/local/man/man1/gview.1
	rm /usr/local/man/man1/gvim.1
	rm /usr/local/man/man1/gvimdiff.1
	rm /usr/local/man/man1/rgview.1
	rm /usr/local/man/man1/rgvim.1
	rm /usr/local/man/man1/rview.1
	rm /usr/local/man/man1/rvim.1
	rm /usr/local/man/man1/view.1
	rm /usr/local/man/man1/vim.1
	rm /usr/local/man/man1/vimdiff.1
	rm /usr/local/man/man1/vimtutor.1
	rm /usr/local/man/man1/xxd.1


MS-WINDOWS

Ha telepítő segítségével telepítettük a Vimet, akkor az "uninstall-gui"
programmal tudjuk a szerksztőt eltávolíani, melynek az elérési útja tipikusan:
"c:\vim\vim82\ (vagy az az elérési út, amit telepítésnél megadtunk). Ha a
telepítés során engedélyeztük az elemek Start menüben történő elhelyezését,
akkor onnan. Ez a fájlok nagy részét eltávolítja, a menübejegyzéseket és az
asztali ikonokat.  Egyes fájlok hátramaradhatnak, melyek törléséhez a Windows
újraindítása szükséges.
   A telepítő felajánlja az egész "vim" könyvtár törlését. Valószínűleg ez
tartalmazza a vimrc és egyéb runtime fájlokat szóval legyünk óvatosak.

Ha a telepítést zip archívumból végeztük, akkor preferált módszer az
"uninstall" program használata, melyet az "install" programmal megyező
könyvtárban találunk, például: "c:\vim\vim82". Eltávolíthatjuk még a
kalsszikus "Programok eltávolítása" menüpont alatt is.
   Ez csak a registry-bejegyzéseket távolítja el, a fájlokat magunknak kell
törölnünk. Egyszerűen csak töröljük a "vim\vim82" könyvtárat. 
   A "vim" könyvtár tartalmazhatja a vimrc fájlt és egy runtime fájlokat.
Törlés előtt másoljuk őket máshová.

==============================================================================

Tartalomjegyzék: |usr_toc.txt|

Jogi információk: lásd |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
