*usr_42.txt*	For Vim version 8.2.	Last change: 2008 May 05

		  Bram Moolenaar: Vim felhasználói kézikönyv

			     Új menük hozzáadása


Mostanra már tudod, hogy a Vim nagyon flexibilis. Ez a GUI menüire is
vonatkozik. Saját parancsaidat hozzáadhatod menüelemként, így mindig kéznél
lehetnek. A fejezet az egeret használó felhasználóknak íródott.

|42.1|	Bevezetés
|42.2|	Menü parancsok
|42.3|	Egyebek
|42.4|	Eszköztárak és felugró menük

Következő fejezet: |usr_43.txt|  Fájltípusok használata
    Előző fejezet: |usr_41.txt|  Vim szkriptek
 Tartalomjegyzék: |usr_toc.txt|

==============================================================================
*42.1*	Bevezetés

A menüelemek a "$VIMRUNTIME/menu.vim" fájlban vannak tárolva. Ha saját
menüelemeket szeretnél létrehozni, akkor először nyisd meg a fájlt és
tanulmányozd.
   Új menüelemet a ":menu" paranccsal kreálhatunk. A parancs szintaxisa: >

	:menu {menu-item} {keys}

A {menu-item} határozza meg a menüelem helyét. Az alapértelmezett {menu-item}
"File.Save", melyben Save reprezentálja a létrehozott menüt, a "File" pedig a
főmenüt. A neveket "." karakterrel kell elválasztanunk. Például:   >

	:menu File.Save  :update<CR>

Az ":update" parancs kiírja a fájlt, ha azt módosítottuk. Hozzáadhatsz akár új
almenüt: "Edit.Settings.Shiftwidth", ami az Edit főmenü Settings almenüjében
fog megjelenni. Ettől mélyebben is létrehozhatjuk az almenüket. Használatuk
korlátozottan ajánlott, hiszen mindig az egeret kell használnunk az
elérésükhöz.
   A ":menu" parancs nagyon hasonló a ":map" parancshoz: A bal oldalon lévő
elem határozza meg, hogy hol helyezkedik el az elem és a jobb oldal írja le
a funkciót. A definíció {keys} része egyszerű karaktereket tartalmaz, mintha
csak kézzel beírnánk őket. Ezért Insert módban, a {keys}-t alkotó karakterek a
képernyőre kerülnek.


GYORSMENÜK

Az ampersand karakter (&) aláhúzza a karaktert, amivel meggyorsíthatjuk az
elérést. Például, Alt-F-el kiválasztjuk a "File" menüt, S-el pedig a "Save"
menüt. (Windowson le kell tiltsuk a 'winaltkeys' opciót!). Módosítsuk így a
menüt "&File.&Save". 
    Ügyelni kell arra, hogy ne legyen két aláhúzott karakter egy menüszinten
belül, különben nem fogjuk tudni, hogy melyik fut le (emiatt nem kapunk
hibaüzenetet).


PRIORITÁSOK

A menüdefiníciónk így néz ki: >

	:menu 10.340 &File.&Save<Tab>:w  :confirm w<CR>

A 10.340-et hívjuk prioritás számnak, melyet a szerkesztő a menüelemek
elrendezéséhez használ. Az első elem (10) a menüelem menüsoron belül elfoglalt
pozíciójára utal. A menüsoron lévő prioritás balról jobbra növekszik.
   Az alapértelmezett menüelemek prioritása:

	  10	20     40     50      60       70		9999

	+------------------------------------------------------------+
	| File	Edit  Tools  Syntax  Buffers  Window		Help |
	+------------------------------------------------------------+

Figyeld meg, hogy a Help menünek a legmagasabb a prioritása, ezért teljesen a
jobb szélen jelenik meg.
   A második szám (340) a menüelem legördülő ablakban elfoglalt pozícióját
határozza meg. A prioritás ebben a menüben felül a legalacsonyabb és lefelé
növekszik. A "File" menüben lévő prioritások:

			+-----------------+
	    10.310	|Open...	  |
	    10.320	|Split-Open...	  |
	    10.325	|New		  |
	    10.330	|Close		  |
	    10.335	|---------------- |
	    10.340	|Save		  |
	    10.350	|Save As...	  |
	    10.400	|---------------- |
	    10.410	|Split Diff with  |
	    10.420	|Split Patched By |
	    10.500	|---------------- |
	    10.510	|Print		  |
	    10.600	|---------------- |
	    10.610	|Save-Exit	  |
	    10.620	|Exit		  |
			+-----------------+

A menük prioritása között differencia van, ez biztosít helyet az egyedi menük
számára. Ajánlott egy teljesen új menüt létrehozni, de ha az alapértelmezett
menükben szeretnénk az egyedi menüket elhelyezni, semmi akadálya.
   Ha egy mélyebb szintű almenüt készítettél akkor ".szám" prioritást hozzá
kell rendelni.


SPECIÁLIS KARAKTEREK

A {menu-item} ebben a példában "&File.&Save<Tab>:w". Mely egy fontos kérdést
vet fel: a {menu-item}-nek egyszavasnak kell-e lennie? Az elnevezéshez
használhatunk "."-ot szóközöket, tabulátorokat és még <> speciális
karaktereket is (<Space> és <Tab>), akkor escapelned kell őket \ karakterrel.
>
	:menu 10.305 &File.&Do\ It\.\.\. :exit<CR>

A példában szereplő menüelem neve "Do It..." szóközöket is tartalmaz, parancsa
pedig a ":exit<CR>".

A segítséget (leírást,tippet vagy akár magát a parancsot is), <Tab> billentyű
választja el egymástól. A <Tab> utáni karakterek a menü jobb oldalán lesznek
elhelyezve, utalva ezzel a menü végkimenetelére. A "&File.&Save<Tab>:w"
definícióban, ezért a menü neve "File.Save", a leírás pedig a ":w".


ELVÁLASZTÓK

Az elválasztókkal logikailag összetartozó parancsok csoportosíthatóak. Az
elválasztót "-" karakterek közé kell foglalni. Például, "-sep-". Ha több
elválasztót használunk egy menüben, akkor a névnek egyedinek kell lenni (ha
csak egy szerepel a menüben, akkor nem.
   Az elválasztó parancsa soha nem fog lefutni, definiálni azonban kötelező,
erre a célra egy ":" tökéletesen megfelel. Például:   >

	:amenu 20.510 Edit.-sep3- :

==============================================================================
*42.2*	Menü parancsok

Módspecifikus menüket is definiálhatunk. A variációk a ":map" parancsnál
megismertekkel azonos:

	:menu		Normal, Visual és Operator-pending mód
	:nmenu		Normal mód
	:vmenu		Visual mód
	:omenu		Operator-pending mód
	:menu!		Insert és Command-line mód
	:imenu		Insert mód
	:cmenu		Command-line mód
	:tlmenu		Terminal mód
	:amenu		Összes mód (kivéve Terminal mód)

Annak elkerülése, hogy a menükben szereplő parancsok új mappeket indítsanak
el: ":noremenu", ":nnoremenu", ":anoremenu", stb.


:AMENU HASZNÁLATA

Az "amenu" egy kicsit más. Feltételezi, hogy a {keys}-ben leírt karakterek
Normal módban fognak lefutni. Ha a Vim Visual vagy Insert módban van, mialatt
a menüt használjuk, akkor a futtatás előtt visszatér Normal módban. Ezért az
":amenu" CTRL-C vagy CTRL-O parancsokat automatikusan futtatja (hogy
visszakerüljünk Normal módba). Például, ha az alábbi menüt használod: >
>
	:amenu  90.100 Mine.Find\ Word  *

Az automatikusan módosított parancs:

	Normal mód:		*
	Visual mód:		CTRL-C *
	Operator-pending mód:	CTRL-C *
	Insert mód:		CTRL-O *
	Command-line mód:	CTRL-C *

Command-line módban a CTRL-C megszakítja a Command-linet (mindent töröl amit
addig beírtál). Visual és Operator-pending módban csak egyszerűen módváltás
történik. A CTRL-O Insert módban kilép, futtatja a parancsot, majd visszalép
Insert módba. 
   A CTRL-O csak egy Normal módú parancs kiadására alkalmas. Ha több parancsot
szeretnél futtatni, akkor készíts egy függvényt, és hívd meg a menüből: >

	:amenu  Mine.Next\ File  :call <SID>NextFile()<CR>
	:function <SID>NextFile()
	:  next
	:  1/^Code
	:endfunction

A menüelem átvált az argumentumlista ":args" következő elemére a ":next"
paranccsal, és megkeresi a "Code"-al kezdődő sort. 
   Az <SID> a függvény név előtt az úgynevezett szkript ID. A függvény így
marad lokális az adott szkripthez. Ezzel kerülhető el az a probléma, ha a
függvény neve már szerepelne valahol (például ha mi, vagy egy beépülő
definiálta). Lásd |<SID>|.


NÉMA MENÜK

A menü lefuttatja a  {keys} mezőben definiált értékeket. Az ":" parancsok
esetében azt jelenti, hogy látni fogod a parancs kimenetelés a command-lineon.
Ha a kimenet nagyon hosszú, akkor a "hit-Enter" prompt megjelenik, mi elég
idegesítő lehet. 
   Tegyük a menüt némává a <silent> argumentum segítségével. Például, vegyük a
NextFile() függvényhívását alapul az előző példában. A parancs futtatásának
kimenete a command-lineon:

	:call <SNR>34_NextFile() ~

Ez nem fog megjelenni, ha a <silent> argumentumot használjuk (elsőként): >

	:amenu <silent> Mine.Next\ File :call <SID>NextFile()<CR>

Ne használd a <silent> argumentumot túl gyakran. Rövid parancsok esetén a
kimenet elfér. Ha a menüt mások számára tervezed, akkor jó látni, hogy mi
történik, illetve, hogy mit kell beírni az adott funkcióhoz.


MENÜK LISTÁZÁSA

Ha a ":menu" parancsot argumentumok nélkül használjuk, akkor kilistázza a
menüelemeket. A menüelem nevének része is átadható, így csak azt a menüt
jeleníti meg: >

	:amenu

Az összes menü listázása, hosszú! Jobb egy nevet átadni, hogy rövidebb listát
kapjunk: >

	:amenu Edit

Ez csak az "Edit" menü elemeit listázza (az összes módban). Módspecifikus menü
listázása (insert mód): >

	:imenu Edit.Undo

Ügyelj rá, hogy a pontos nevet írd be. A '&' karakterek elhagyhatóak. A <Tab>
és az utána szereplő karakterek is elhagyhatóak.


MENÜK TÖRLÉSE

A menü törléséhez a listázáshoz hasonló (":menu") parancsot használunk, amit
":unmenu"-re változtatunk. Ezért ":menu"-ből, ":unmenu", ":nmenu"-ből
":nunmenu" lesz, stb. A "Tools.Make" elem törlése (Insert mód menü): >

	:iunmenu Tools.Make

A teljes menüt is törölheted, a menü nevének használatával. Például:   >
 
	:aunmenu Syntax

A parancs törli Syntax menüt és az összes almenüt.

==============================================================================
*42.3*	Egyebek

A 'guioptions'-ban lévő flagekkel megváltoztatható a menü kinézete. Az
alapértelmezett értéke az alábbi listában található összes érték (kivéve M): >

	:set guioptions-=m
<
	m		Menüsor megjelenítése

	M		Alapértelmezett menük elrejtése

	g		Eltávolításával az inaktív menüelemek nem szürkék
			lesznek, hanem teljesen el lesznek távolítva
			(rendszerfüggő).

	t		dokkolás engedélyezése

A menüsáv fölött lévő pontozott vonal nem elválasztó. Ezzel tudod
'un-dockolni' az menüsávot (lebegő mód). Jól jön, ha gyakran használod a
menüt.

A menüelemek fordítása, lásd  |:menutrans|.

Ha az egeret használjuk, akkor nem jó ötlet a ":browse" paranccsal fájlt
nyitni, majd ":confirm" paranccsal párbeszédablakot kérni (hibaüzenet helyett).
Kombináljuk a kettőt: >

	:amenu File.Open  :browse confirm edit<CR>

A ":browse" parancs megjeleníti a fájlkezelőt. A ":confirm" parancs pedig
felbukkanó ablakban választás elé állít, ha a buffer tartalma változott.
   Bonyolultabb menükhöz a confirm() és az inputdialog() függvényeket
használhatjuk. Az alapértelmezett menük adhat némi inspirációt.

==============================================================================
*42.4*	Eszköztárak és környezeti menük

Kétféle speciális menü létezik: ToolBar (eszköztár) és PopUp (környezeti
menü). A két szóval kezdődő menüelemek nem jelennek meg a menüben (felső fő
menü).


ESZKÖZTÁR

A eszköztár csak akkor jelenik meg, ha a "T" flag szerepel a 'guioptions'-ban.
   Az eszköztáron szövegek helyett ikonokkal reprezentáljuk a parancsokat.
Például, a "ToolBar.New" nevű {menu-item} felelős az eszköztár "New" ikonjért.
   A Vimben 28 beépített ikon található. A táblázatot itt találod:
|builtin-tools|. A legtöbbjük az alapértelmezett eszköztáron már szerepel. Az
eszköztáron szereplő menüelemek természetesen szerkeszthetőek. 
   Lecserélhetjük a bitmap képet, új elemet hozhatunk létre. Példa az új elem
létrehozására: >

	:tmenu ToolBar.Compile  Compile the current file
	:amenu ToolBar.Compile  :!cc %:S -o %:r:S<CR>

Hozz létre egy ikont. MS-Windowson rendszeren bitmap formátum kötelező, a neve
pedig "Compile.bmp"-nek kell lennie. Unix rendszeren XPM formátumot kell
használni, a fájlnév pedig "Compile.xpm". Mérete: 18x18 pixel. 
   Másoljuk a bitmap képet a "bitmaps" könyvtárba (ha nem létezik hozzuk
létre) a 'runtimepath' elérési út alatt. Például, Unix:
"~/.vim/bitmaps/Compile.xpm".

Ha a kép nem egyértelmű, akkor tooltip (buborék) súgót is hozzárendelhetünk az
elemhez, mely akkor jelenik meg, ha az egeret az elemen tartjuk egy rövid
ideig. Például:   >

	:tmenu ToolBar.Make  Run make in the current directory
<
	Megjegyzés:
	Figyelj a nagy- és kisbetűkre. "Toolbar" és "toolbar" különböző a
	"ToolBar"-tól!

A tooltip eltávolítása |:tunmenu|.

A 'toolbar' opció képes csak szöveget, csak ikont, vagy a kettő kombinációját
megjeleníteni. A legtöbb felhasználó ikonokat használ, hiszen a szöveg extra
helyet foglal.



POPUP MENÜ

A popup (környezeti) menü a kurzor helyén jelenik meg. MS-Windowson a jobb
egér-klikkel aktiválhatjuk, a ballal pedig kiválasztjuk az elemet. Unix
rendszeren a jobb egérgomb tartásával jeleníthetjük meg.
   A menü csak akkor jelenik meg, ha a 'mousemodel' opció "popup" vagy
"popup_setpos" értékre van állítva. A különbség a kettő között, hogy az utóbbi
a kurzor oda pozícionálja, ahol a menüt megnyitottuk. Ha kijelölésre (Visual
mód) kattintunk, akkor az nem szűnik meg. Ha van kijelölés és nem rá
kattintunk, akkor a kijelölés megszűnik.
   Minden módhoz külön környezeti menü tartozik, ezért nagy kevés az inaktív
elem.

==============================================================================

Következő fejezet: |usr_43.txt|  Fájltípusok

Jogi információk: lásd |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
